import { Component, OnInit } from '@angular/core';
import { PaymentService } from '../../services/payment.service';
import { Payment } from '../../models/payment.model';

@Component({
  selector: 'app-payment-list',
  templateUrl: './payment-list.component.html',
  styleUrls: ['./payment-list.component.css']
})
export class PaymentComponent implements OnInit {
  payments: Payment[] = [];
  amountToPay: number = 0; // Assuming you have an input for the payment amount in the template

  constructor(private paymentService: PaymentService) {}

  ngOnInit(): void {
    this.fetchAllPayments();
  }

  fetchAllPayments(): void {
    this.paymentService.getAllPayments().subscribe(
      (payments: Payment[]) => {
        this.payments = payments;
        console.log('Payments:', this.payments);
      },
      (error) => {
        console.error('Error fetching payments:', error);
        // Handle errors as needed
      }
    );
  }

  makePayment(): void {
    // Assuming you have a valid amount to be paid
    const newPayment: Payment = {
      paymentID: 0, // Set to 0 as it will be generated by the server
      amountPaid: this.amountToPay,
      paymentDate: new Date(),
      paymentMethod: 'Online', 
      transactionID: '123456', 
    };

    this.paymentService.createPayment(newPayment).subscribe(
      (createdPayment: Payment) => {
        console.log('Payment successful:', createdPayment);
        // Optionally, you can refresh the payments list after a successful payment
        this.fetchAllPayments();
      },
      (error) => {
        console.error('Error making payment:', error);
        // Handle errors as needed
      }
    );
  }

  isCustomer(): boolean {
    // Implement the logic to check if the user is a customer
    // You may use your authentication service or other logic to determine this
    // For the sake of the example, let's assume a variable 'isCustomer' is set elsewhere
    const isCustomer = true;
    return isCustomer;
  }
}
