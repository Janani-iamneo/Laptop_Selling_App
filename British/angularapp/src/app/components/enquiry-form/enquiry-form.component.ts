import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { Enquiry } from 'src/app/models/enquiry.model';
import { AuthService } from 'src/app/services/auth.service';
import { EnquiryService } from 'src/app/services/enquiry.service';

@Component({
  selector: 'app-enquiry-form',
  templateUrl: './enquiry-form.component.html',
  styleUrls: ['./enquiry-form.component.css'],
})
export class EnquiryFormComponent {
  newEnquiryForm: FormGroup;
  isNewEnquiry: boolean = true;

  constructor(
    private fb: FormBuilder,
    private authService: AuthService,
    private enquiryService: EnquiryService,
    private router: Router
  ) {
    this.newEnquiryForm = this.fb.group({
      // Define your form controls and validators here
      enquiryID: [null], // Assuming this is autogenerated by the server
      enquiryDate: [null, Validators.required],
      userId: [null, Validators.required],
      title: [null, Validators.required],
      description: [null, Validators.required],
      emailID: [null, [Validators.required, Validators.email]],
      enquiryType: [null, Validators.required],
      courseName: [null, Validators.required],
    });
  }

  createEnquiry(): void {
    if (this.authService.isCustomer() && this.newEnquiryForm.valid) {
      const newEnquiry: Enquiry = this.newEnquiryForm.value as Enquiry;

      this.enquiryService.createEnquiry(newEnquiry).subscribe(
        (createdEnquiry: Enquiry) => {
          console.log('Enquiry created successfully:', createdEnquiry);
          this.router.navigate(['/enquiries']);
          // Fetch all enquiries after successful creation
          // You might want to implement a method to fetch all enquiries in your service
          // and subscribe to it in your component.
        },
        (error) => {
          console.error('Error creating enquiry:', error);
        }
      );
    } else {
      console.error('Only customers can create enquiries or form is not valid');
    }
  }
}
